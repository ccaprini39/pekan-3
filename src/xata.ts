// Generated by Xata Codegen 0.28.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Notes",
    columns: [
      { name: "Content", type: "text", defaultValue: "Hello world!" },
      { name: "Title", type: "string", unique: true },
      { name: "doc-url", type: "string", defaultValue: "/notes/" },
    ],
    revLinks: [{ column: "NoteId", table: "NoteTags" }],
  },
  {
    name: "Tags",
    columns: [{ name: "TagName", type: "string", unique: true }],
    revLinks: [{ column: "TagId", table: "NoteTags" }],
  },
  {
    name: "NoteTags",
    columns: [
      { name: "NoteId", type: "link", link: { table: "Notes" } },
      { name: "TagId", type: "link", link: { table: "Tags" } },
    ],
  },
  {
    name: "Assistants",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "Fred" },
      {
        name: "systemMessage",
        type: "text",
        notNull: true,
        defaultValue: "You are a helpful assistant...",
      },
    ],
    revLinks: [{ column: "Character", table: "ChatConversation" }],
  },
  {
    name: "Tasks",
    columns: [
      { name: "description", type: "text" },
      { name: "status", type: "string" },
      { name: "tags", type: "multiple" },
      { name: "deadline", type: "string" },
      { name: "comments", type: "multiple" },
    ],
  },
  {
    name: "ChatConversation",
    columns: [
      { name: "Character", type: "link", link: { table: "Assistants" } },
      {
        name: "messages",
        type: "json",
        defaultValue:
          '  [\n    {\n      "id": "something",\n      "role": "system",\n      "content": "something",\n      "createdAt": "something"\n    }\n  ]',
      },
      { name: "currentTokens", type: "int" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Notes = InferredTypes["Notes"];
export type NotesRecord = Notes & XataRecord;

export type Tags = InferredTypes["Tags"];
export type TagsRecord = Tags & XataRecord;

export type NoteTags = InferredTypes["NoteTags"];
export type NoteTagsRecord = NoteTags & XataRecord;

export type Assistants = InferredTypes["Assistants"];
export type AssistantsRecord = Assistants & XataRecord;

export type Tasks = InferredTypes["Tasks"];
export type TasksRecord = Tasks & XataRecord;

export type ChatConversation = InferredTypes["ChatConversation"];
export type ChatConversationRecord = ChatConversation & XataRecord;

export type DatabaseSchema = {
  Notes: NotesRecord;
  Tags: TagsRecord;
  NoteTags: NoteTagsRecord;
  Assistants: AssistantsRecord;
  Tasks: TasksRecord;
  ChatConversation: ChatConversationRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Collin-Caprini-s-workspace-fs8hhd.us-east-1.xata.sh/db/pekan-3",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
